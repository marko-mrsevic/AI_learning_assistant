version: "3.9"

services:
  web:
    build: .
    container_name: django_app
    depends_on:
      - postgres
      - neo4j
      - mongodb
      - redis
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/db"
      NEO4J_HOST: neo4j
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
      MONGO_URI: "mongodb://mongodb:27017/mongodb"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  neo4j:
    image: neo4j:5
    container_name: neo4j_db
    restart: unless-stopped
    environment:
      NEO4J_dbms_default__advertised__address: neo4j
      NEO4J_AUTH: neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs

  mongodb:
    image: mongo:6
    container_name: mongodb
    environment:
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7
    container_name: redis_cache
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  mongodb_data:
  redis_data:
